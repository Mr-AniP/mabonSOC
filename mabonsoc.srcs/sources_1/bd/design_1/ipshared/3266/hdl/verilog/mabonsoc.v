// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mabonsoc,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=44,HLS_SYN_TPT=40,HLS_SYN_MEM=1,HLS_SYN_DSP=4,HLS_SYN_FF=19201,HLS_SYN_LUT=26517,HLS_VERSION=2019_1}" *)

module mabonsoc (
        ap_clk,
        ap_rst_n,
        s_axi_BUS_A_AWVALID,
        s_axi_BUS_A_AWREADY,
        s_axi_BUS_A_AWADDR,
        s_axi_BUS_A_WVALID,
        s_axi_BUS_A_WREADY,
        s_axi_BUS_A_WDATA,
        s_axi_BUS_A_WSTRB,
        s_axi_BUS_A_ARVALID,
        s_axi_BUS_A_ARREADY,
        s_axi_BUS_A_ARADDR,
        s_axi_BUS_A_RVALID,
        s_axi_BUS_A_RREADY,
        s_axi_BUS_A_RDATA,
        s_axi_BUS_A_RRESP,
        s_axi_BUS_A_BVALID,
        s_axi_BUS_A_BREADY,
        s_axi_BUS_A_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 40'd1;
parameter    ap_ST_fsm_pp0_stage1 = 40'd2;
parameter    ap_ST_fsm_pp0_stage2 = 40'd4;
parameter    ap_ST_fsm_pp0_stage3 = 40'd8;
parameter    ap_ST_fsm_pp0_stage4 = 40'd16;
parameter    ap_ST_fsm_pp0_stage5 = 40'd32;
parameter    ap_ST_fsm_pp0_stage6 = 40'd64;
parameter    ap_ST_fsm_pp0_stage7 = 40'd128;
parameter    ap_ST_fsm_pp0_stage8 = 40'd256;
parameter    ap_ST_fsm_pp0_stage9 = 40'd512;
parameter    ap_ST_fsm_pp0_stage10 = 40'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 40'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 40'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 40'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 40'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 40'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 40'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 40'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 40'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 40'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 40'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 40'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 40'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 40'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 40'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 40'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 40'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 40'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 40'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 40'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 40'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 40'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 40'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 40'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 40'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 40'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 40'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 40'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 40'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 40'd549755813888;
parameter    C_S_AXI_BUS_A_DATA_WIDTH = 32;
parameter    C_S_AXI_BUS_A_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_BUS_A_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_BUS_A_AWVALID;
output   s_axi_BUS_A_AWREADY;
input  [C_S_AXI_BUS_A_ADDR_WIDTH - 1:0] s_axi_BUS_A_AWADDR;
input   s_axi_BUS_A_WVALID;
output   s_axi_BUS_A_WREADY;
input  [C_S_AXI_BUS_A_DATA_WIDTH - 1:0] s_axi_BUS_A_WDATA;
input  [C_S_AXI_BUS_A_WSTRB_WIDTH - 1:0] s_axi_BUS_A_WSTRB;
input   s_axi_BUS_A_ARVALID;
output   s_axi_BUS_A_ARREADY;
input  [C_S_AXI_BUS_A_ADDR_WIDTH - 1:0] s_axi_BUS_A_ARADDR;
output   s_axi_BUS_A_RVALID;
input   s_axi_BUS_A_RREADY;
output  [C_S_AXI_BUS_A_DATA_WIDTH - 1:0] s_axi_BUS_A_RDATA;
output  [1:0] s_axi_BUS_A_RRESP;
output   s_axi_BUS_A_BVALID;
input   s_axi_BUS_A_BREADY;
output  [1:0] s_axi_BUS_A_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_ready;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_state40_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_11001;
wire   [31:0] Out_r;
reg    Out_r_ap_vld;
wire   [31:0] reward;
reg   [1:0] Index_V;
reg   [13:0] X_V_0;
reg   [13:0] X_V_1;
reg   [13:0] X_V_2;
reg   [13:0] X_V_3;
reg   [13:0] t_V;
reg   [13:0] T_V_0;
reg   [13:0] T_V_1;
reg   [13:0] T_V_2;
reg   [13:0] T_V_3;
reg   [13:0] tmp_V_reg_972;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state41_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln887_fu_291_p2;
reg   [0:0] icmp_ln887_reg_979;
reg   [0:0] icmp_ln887_reg_979_pp0_iter1_reg;
wire   [1:0] trunc_ln321_fu_305_p1;
reg   [1:0] trunc_ln321_reg_983;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state42_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [1:0] trunc_ln321_reg_983_pp0_iter1_reg;
wire   [13:0] select_ln700_fu_373_p3;
reg   [13:0] select_ln700_reg_994;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [13:0] select_ln700_2_fu_395_p3;
reg   [13:0] select_ln700_2_reg_1001;
wire   [13:0] select_ln700_5_fu_425_p3;
reg   [13:0] select_ln700_5_reg_1009;
wire   [13:0] select_ln700_8_fu_449_p3;
reg   [13:0] select_ln700_8_reg_1018;
reg   [13:0] T_V_0_load_reg_1027;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [13:0] T_V_1_load_reg_1034;
reg   [13:0] T_V_2_load_reg_1042;
reg   [13:0] T_V_3_load_reg_1050;
wire   [16:0] trunc_ln703_fu_541_p1;
reg   [16:0] trunc_ln703_reg_1098;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [17:0] m_V_fu_545_p3;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [17:0] grp_fu_555_p2;
reg   [17:0] p_Val2_6_reg_1131;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_11001;
wire   [17:0] grp_fu_564_p2;
reg   [17:0] p_Val2_7_reg_1136;
wire   [17:0] grp_fu_573_p2;
reg   [17:0] p_Val2_8_reg_1141;
wire   [17:0] grp_fu_582_p2;
reg   [17:0] p_Val2_10_reg_1146;
wire   [14:0] trunc_ln703_1_fu_588_p1;
reg   [14:0] trunc_ln703_1_reg_1151;
reg   [14:0] trunc_ln3_reg_1156;
wire   [14:0] trunc_ln703_2_fu_602_p1;
reg   [14:0] trunc_ln703_2_reg_1161;
reg   [14:0] trunc_ln708_s_reg_1166;
wire   [14:0] trunc_ln703_3_fu_616_p1;
reg   [14:0] trunc_ln703_3_reg_1171;
reg   [14:0] trunc_ln708_21_reg_1176;
wire   [14:0] trunc_ln703_4_fu_630_p1;
reg   [14:0] trunc_ln703_4_reg_1181;
reg   [14:0] trunc_ln708_22_reg_1186;
wire   [14:0] UCB_0_V_fu_644_p2;
reg   [14:0] UCB_0_V_reg_1191;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state43_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [14:0] UCB_1_V_fu_648_p2;
reg   [14:0] UCB_1_V_reg_1196;
wire   [14:0] UCB_2_V_fu_652_p2;
reg   [14:0] UCB_2_V_reg_1201;
wire   [14:0] UCB_3_V_fu_656_p2;
reg   [14:0] UCB_3_V_reg_1206;
wire   [1:0] zext_ln1495_fu_666_p1;
reg   [1:0] zext_ln1495_reg_1212;
wire   [0:0] icmp_ln1495_1_fu_684_p2;
reg   [0:0] icmp_ln1495_1_reg_1217;
wire   [1:0] select_ln35_1_fu_711_p3;
reg   [1:0] select_ln35_1_reg_1222;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state44_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln321_fu_719_p2;
wire   [0:0] icmp_ln321_1_fu_724_p2;
wire   [0:0] icmp_ln321_2_fu_729_p2;
wire   [0:0] and_ln321_1_fu_755_p2;
wire   [13:0] select_ln321_fu_761_p3;
wire   [13:0] select_ln321_2_fu_775_p3;
wire   [13:0] select_ln321_5_fu_796_p3;
wire   [13:0] select_ln321_8_fu_817_p3;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state45_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage39_subdone;
wire   [20:0] grp_sqrt_fixed_28_15_s_fu_246_ap_return;
reg    grp_sqrt_fixed_28_15_s_fu_246_ap_ce;
wire    ap_block_state31_pp0_stage30_iter0_ignore_call6;
wire    ap_block_pp0_stage30_11001_ignoreCallOp285;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state32_pp0_stage31_iter0_ignore_call6;
wire    ap_block_pp0_stage31_11001_ignoreCallOp293;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state33_pp0_stage32_iter0_ignore_call6;
wire    ap_block_pp0_stage32_11001_ignoreCallOp301;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_state34_pp0_stage33_iter0_ignore_call6;
wire    ap_block_pp0_stage33_11001_ignoreCallOp309;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_state35_pp0_stage34_iter0_ignore_call6;
wire    ap_block_pp0_stage34_11001_ignoreCallOp317;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_state36_pp0_stage35_iter0_ignore_call6;
wire    ap_block_pp0_stage35_11001_ignoreCallOp325;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_state37_pp0_stage36_iter0_ignore_call6;
wire    ap_block_pp0_stage36_11001_ignoreCallOp333;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_state38_pp0_stage37_iter0_ignore_call6;
wire    ap_block_pp0_stage37_11001_ignoreCallOp341;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_state39_pp0_stage38_iter0_ignore_call6;
wire    ap_block_pp0_stage38_11001_ignoreCallOp349;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_state40_pp0_stage39_iter0_ignore_call6;
wire    ap_block_pp0_stage39_11001_ignoreCallOp357;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call6;
wire    ap_block_state41_pp0_stage0_iter1_ignore_call6;
reg    ap_block_pp0_stage0_11001_ignoreCallOp365;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call6;
wire    ap_block_state42_pp0_stage1_iter1_ignore_call6;
wire    ap_block_pp0_stage1_11001_ignoreCallOp373;
wire   [20:0] grp_sqrt_fixed_28_15_s_fu_251_ap_return;
reg    grp_sqrt_fixed_28_15_s_fu_251_ap_ce;
wire    ap_block_state31_pp0_stage30_iter0_ignore_call15;
wire    ap_block_pp0_stage30_11001_ignoreCallOp287;
wire    ap_block_state32_pp0_stage31_iter0_ignore_call15;
wire    ap_block_pp0_stage31_11001_ignoreCallOp295;
wire    ap_block_state33_pp0_stage32_iter0_ignore_call15;
wire    ap_block_pp0_stage32_11001_ignoreCallOp303;
wire    ap_block_state34_pp0_stage33_iter0_ignore_call15;
wire    ap_block_pp0_stage33_11001_ignoreCallOp311;
wire    ap_block_state35_pp0_stage34_iter0_ignore_call15;
wire    ap_block_pp0_stage34_11001_ignoreCallOp319;
wire    ap_block_state36_pp0_stage35_iter0_ignore_call15;
wire    ap_block_pp0_stage35_11001_ignoreCallOp327;
wire    ap_block_state37_pp0_stage36_iter0_ignore_call15;
wire    ap_block_pp0_stage36_11001_ignoreCallOp335;
wire    ap_block_state38_pp0_stage37_iter0_ignore_call15;
wire    ap_block_pp0_stage37_11001_ignoreCallOp343;
wire    ap_block_state39_pp0_stage38_iter0_ignore_call15;
wire    ap_block_pp0_stage38_11001_ignoreCallOp351;
wire    ap_block_state40_pp0_stage39_iter0_ignore_call15;
wire    ap_block_pp0_stage39_11001_ignoreCallOp359;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call15;
wire    ap_block_state41_pp0_stage0_iter1_ignore_call15;
reg    ap_block_pp0_stage0_11001_ignoreCallOp367;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call15;
wire    ap_block_state42_pp0_stage1_iter1_ignore_call15;
wire    ap_block_pp0_stage1_11001_ignoreCallOp377;
wire   [20:0] grp_sqrt_fixed_28_15_s_fu_256_ap_return;
reg    grp_sqrt_fixed_28_15_s_fu_256_ap_ce;
wire    ap_block_state31_pp0_stage30_iter0_ignore_call24;
wire    ap_block_pp0_stage30_11001_ignoreCallOp289;
wire    ap_block_state32_pp0_stage31_iter0_ignore_call24;
wire    ap_block_pp0_stage31_11001_ignoreCallOp297;
wire    ap_block_state33_pp0_stage32_iter0_ignore_call24;
wire    ap_block_pp0_stage32_11001_ignoreCallOp305;
wire    ap_block_state34_pp0_stage33_iter0_ignore_call24;
wire    ap_block_pp0_stage33_11001_ignoreCallOp313;
wire    ap_block_state35_pp0_stage34_iter0_ignore_call24;
wire    ap_block_pp0_stage34_11001_ignoreCallOp321;
wire    ap_block_state36_pp0_stage35_iter0_ignore_call24;
wire    ap_block_pp0_stage35_11001_ignoreCallOp329;
wire    ap_block_state37_pp0_stage36_iter0_ignore_call24;
wire    ap_block_pp0_stage36_11001_ignoreCallOp337;
wire    ap_block_state38_pp0_stage37_iter0_ignore_call24;
wire    ap_block_pp0_stage37_11001_ignoreCallOp345;
wire    ap_block_state39_pp0_stage38_iter0_ignore_call24;
wire    ap_block_pp0_stage38_11001_ignoreCallOp353;
wire    ap_block_state40_pp0_stage39_iter0_ignore_call24;
wire    ap_block_pp0_stage39_11001_ignoreCallOp361;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call24;
wire    ap_block_state41_pp0_stage0_iter1_ignore_call24;
reg    ap_block_pp0_stage0_11001_ignoreCallOp369;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call24;
wire    ap_block_state42_pp0_stage1_iter1_ignore_call24;
wire    ap_block_pp0_stage1_11001_ignoreCallOp381;
wire   [20:0] grp_sqrt_fixed_28_15_s_fu_261_ap_return;
reg    grp_sqrt_fixed_28_15_s_fu_261_ap_ce;
wire    ap_block_state31_pp0_stage30_iter0_ignore_call33;
wire    ap_block_pp0_stage30_11001_ignoreCallOp291;
wire    ap_block_state32_pp0_stage31_iter0_ignore_call33;
wire    ap_block_pp0_stage31_11001_ignoreCallOp299;
wire    ap_block_state33_pp0_stage32_iter0_ignore_call33;
wire    ap_block_pp0_stage32_11001_ignoreCallOp307;
wire    ap_block_state34_pp0_stage33_iter0_ignore_call33;
wire    ap_block_pp0_stage33_11001_ignoreCallOp315;
wire    ap_block_state35_pp0_stage34_iter0_ignore_call33;
wire    ap_block_pp0_stage34_11001_ignoreCallOp323;
wire    ap_block_state36_pp0_stage35_iter0_ignore_call33;
wire    ap_block_pp0_stage35_11001_ignoreCallOp331;
wire    ap_block_state37_pp0_stage36_iter0_ignore_call33;
wire    ap_block_pp0_stage36_11001_ignoreCallOp339;
wire    ap_block_state38_pp0_stage37_iter0_ignore_call33;
wire    ap_block_pp0_stage37_11001_ignoreCallOp347;
wire    ap_block_state39_pp0_stage38_iter0_ignore_call33;
wire    ap_block_pp0_stage38_11001_ignoreCallOp355;
wire    ap_block_state40_pp0_stage39_iter0_ignore_call33;
wire    ap_block_pp0_stage39_11001_ignoreCallOp363;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call33;
wire    ap_block_state41_pp0_stage0_iter1_ignore_call33;
reg    ap_block_pp0_stage0_11001_ignoreCallOp371;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call33;
wire    ap_block_state42_pp0_stage1_iter1_ignore_call33;
wire    ap_block_pp0_stage1_11001_ignoreCallOp385;
wire    grp_log_28_15_s_fu_266_ap_start;
wire    grp_log_28_15_s_fu_266_ap_done;
wire    grp_log_28_15_s_fu_266_ap_idle;
wire    grp_log_28_15_s_fu_266_ap_ready;
wire   [26:0] grp_log_28_15_s_fu_266_x_V;
wire   [27:0] grp_log_28_15_s_fu_266_ap_return;
reg   [1:0] ap_phi_mux_Index_V_new_3_phi_fu_120_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_Index_V_new_3_reg_117;
reg   [1:0] ap_phi_reg_pp0_iter1_Index_V_new_3_reg_117;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_pp0_stage4;
reg   [13:0] ap_phi_mux_X_V_0_new_2_phi_fu_129_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_X_V_0_new_2_reg_126;
reg   [13:0] ap_phi_reg_pp0_iter1_X_V_0_new_2_reg_126;
reg   [13:0] ap_phi_mux_X_V_1_new_2_phi_fu_138_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_X_V_1_new_2_reg_135;
reg   [13:0] ap_phi_reg_pp0_iter1_X_V_1_new_2_reg_135;
reg   [13:0] ap_phi_mux_X_V_2_new_2_phi_fu_147_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_X_V_2_new_2_reg_144;
reg   [13:0] ap_phi_reg_pp0_iter1_X_V_2_new_2_reg_144;
reg   [13:0] ap_phi_mux_X_V_3_new_2_phi_fu_156_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_X_V_3_new_2_reg_153;
reg   [13:0] ap_phi_reg_pp0_iter1_X_V_3_new_2_reg_153;
reg   [0:0] ap_phi_mux_T_V_0_flag_2_phi_fu_165_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_T_V_0_flag_2_reg_162;
reg   [0:0] ap_phi_reg_pp0_iter1_T_V_0_flag_2_reg_162;
reg   [13:0] ap_phi_mux_T_V_0_new_2_phi_fu_176_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_T_V_0_new_2_reg_172;
reg   [13:0] ap_phi_reg_pp0_iter1_T_V_0_new_2_reg_172;
wire   [13:0] select_ln700_9_fu_844_p3;
reg   [0:0] ap_phi_mux_T_V_1_flag_2_phi_fu_186_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_T_V_1_flag_2_reg_183;
reg   [0:0] ap_phi_reg_pp0_iter1_T_V_1_flag_2_reg_183;
reg   [13:0] ap_phi_mux_T_V_1_new_2_phi_fu_197_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_T_V_1_new_2_reg_193;
reg   [13:0] ap_phi_reg_pp0_iter1_T_V_1_new_2_reg_193;
wire   [13:0] select_ln700_11_fu_864_p3;
reg   [0:0] ap_phi_mux_T_V_2_flag_2_phi_fu_207_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_T_V_2_flag_2_reg_204;
reg   [0:0] ap_phi_reg_pp0_iter1_T_V_2_flag_2_reg_204;
reg   [13:0] ap_phi_mux_T_V_2_new_2_phi_fu_218_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_T_V_2_new_2_reg_214;
reg   [13:0] ap_phi_reg_pp0_iter1_T_V_2_new_2_reg_214;
wire   [13:0] select_ln700_13_fu_890_p3;
reg   [0:0] ap_phi_mux_T_V_3_flag_2_phi_fu_228_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_T_V_3_flag_2_reg_225;
reg   [0:0] ap_phi_reg_pp0_iter1_T_V_3_flag_2_reg_225;
reg   [13:0] ap_phi_mux_T_V_3_new_2_phi_fu_239_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_T_V_3_new_2_reg_235;
reg   [13:0] ap_phi_reg_pp0_iter1_T_V_3_new_2_reg_235;
wire   [13:0] select_ln700_15_fu_905_p3;
wire    ap_block_pp0_stage30;
reg    grp_log_28_15_s_fu_266_ap_start_reg;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire   [13:0] add_ln700_2_fu_308_p2;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage4_01001;
wire   [11:0] tmp_42_fu_281_p4;
wire   [0:0] trunc_ln301_fu_323_p1;
wire   [13:0] tmp_1_fu_347_p6;
wire   [13:0] zext_ln700_fu_327_p1;
wire   [0:0] icmp_ln700_fu_367_p2;
wire   [13:0] add_ln700_fu_361_p2;
wire   [0:0] icmp_ln700_1_fu_381_p2;
wire   [13:0] select_ln700_1_fu_387_p3;
wire   [0:0] icmp_ln700_2_fu_403_p2;
wire   [13:0] select_ln700_3_fu_409_p3;
wire   [13:0] select_ln700_4_fu_417_p3;
wire   [13:0] select_ln700_6_fu_433_p3;
wire   [13:0] select_ln700_7_fu_441_p3;
wire   [31:0] grp_fu_484_p0;
wire   [14:0] grp_fu_484_p1;
wire   [31:0] grp_fu_501_p0;
wire   [14:0] grp_fu_501_p1;
wire   [31:0] grp_fu_518_p0;
wire   [14:0] grp_fu_518_p1;
wire   [31:0] grp_fu_535_p0;
wire   [14:0] grp_fu_535_p1;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire   [13:0] grp_fu_555_p1;
wire   [13:0] grp_fu_564_p1;
wire   [13:0] grp_fu_573_p1;
wire   [13:0] grp_fu_582_p1;
wire   [31:0] grp_fu_484_p2;
wire   [31:0] grp_fu_501_p2;
wire   [31:0] grp_fu_518_p2;
wire   [31:0] grp_fu_535_p2;
wire   [0:0] icmp_ln1495_fu_660_p2;
wire   [14:0] tmp_fu_670_p4;
wire   [1:0] tmp_fu_670_p5;
wire   [14:0] tmp_fu_670_p6;
wire   [1:0] select_ln35_fu_690_p3;
wire   [14:0] tmp_2_fu_696_p6;
wire   [0:0] icmp_ln1495_2_fu_706_p2;
wire   [0:0] icmp_ln321_4_fu_739_p2;
wire   [0:0] icmp_ln321_5_fu_744_p2;
wire   [0:0] and_ln321_fu_749_p2;
wire   [0:0] icmp_ln321_3_fu_734_p2;
wire   [13:0] select_ln321_1_fu_768_p3;
wire   [13:0] select_ln321_3_fu_782_p3;
wire   [13:0] select_ln321_4_fu_789_p3;
wire   [13:0] select_ln321_6_fu_803_p3;
wire   [13:0] select_ln321_7_fu_810_p3;
wire   [13:0] tmp_3_fu_824_p6;
wire   [0:0] icmp_ln700_3_fu_839_p2;
wire   [13:0] add_ln700_1_fu_833_p2;
wire   [0:0] icmp_ln700_4_fu_852_p2;
wire   [13:0] select_ln700_10_fu_857_p3;
wire   [0:0] icmp_ln700_5_fu_872_p2;
wire   [0:0] or_ln700_fu_877_p2;
wire   [13:0] select_ln700_12_fu_883_p3;
wire   [13:0] select_ln700_14_fu_898_p3;
reg   [39:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage9_11001;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage10_11001;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage11_11001;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage13_11001;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage15_11001;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage16_11001;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage17_11001;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage18_11001;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage19_11001;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage20_11001;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage21_11001;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage22_11001;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage23_11001;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage24_11001;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage25_11001;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage26_11001;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage27_11001;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage28_11001;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage30_11001;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage31_11001;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage32_11001;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage33_11001;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage34_11001;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage35_11001;
wire    ap_block_state37_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage36_11001;
wire    ap_block_state38_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage37_11001;
wire    ap_block_state39_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage38_11001;
wire    ap_enable_pp0;
wire   [31:0] grp_fu_484_p10;
wire   [31:0] grp_fu_501_p10;
wire   [31:0] grp_fu_518_p10;
wire   [31:0] grp_fu_535_p10;
wire   [17:0] grp_fu_555_p10;
wire   [17:0] grp_fu_564_p10;
wire   [17:0] grp_fu_573_p10;
wire   [17:0] grp_fu_582_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 Index_V = 2'd0;
#0 X_V_0 = 14'd0;
#0 X_V_1 = 14'd0;
#0 X_V_2 = 14'd0;
#0 X_V_3 = 14'd0;
#0 t_V = 14'd0;
#0 T_V_0 = 14'd0;
#0 T_V_1 = 14'd0;
#0 T_V_2 = 14'd0;
#0 T_V_3 = 14'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_log_28_15_s_fu_266_ap_start_reg = 1'b0;
end

mabonsoc_BUS_A_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_BUS_A_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_BUS_A_DATA_WIDTH ))
mabonsoc_BUS_A_s_axi_U(
    .AWVALID(s_axi_BUS_A_AWVALID),
    .AWREADY(s_axi_BUS_A_AWREADY),
    .AWADDR(s_axi_BUS_A_AWADDR),
    .WVALID(s_axi_BUS_A_WVALID),
    .WREADY(s_axi_BUS_A_WREADY),
    .WDATA(s_axi_BUS_A_WDATA),
    .WSTRB(s_axi_BUS_A_WSTRB),
    .ARVALID(s_axi_BUS_A_ARVALID),
    .ARREADY(s_axi_BUS_A_ARREADY),
    .ARADDR(s_axi_BUS_A_ARADDR),
    .RVALID(s_axi_BUS_A_RVALID),
    .RREADY(s_axi_BUS_A_RREADY),
    .RDATA(s_axi_BUS_A_RDATA),
    .RRESP(s_axi_BUS_A_RRESP),
    .BVALID(s_axi_BUS_A_BVALID),
    .BREADY(s_axi_BUS_A_BREADY),
    .BRESP(s_axi_BUS_A_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .Out_r(Out_r),
    .Out_r_ap_vld(Out_r_ap_vld),
    .reward(reward)
);

sqrt_fixed_28_15_s grp_sqrt_fixed_28_15_s_fu_246(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(p_Val2_6_reg_1131),
    .ap_return(grp_sqrt_fixed_28_15_s_fu_246_ap_return),
    .ap_ce(grp_sqrt_fixed_28_15_s_fu_246_ap_ce)
);

sqrt_fixed_28_15_s grp_sqrt_fixed_28_15_s_fu_251(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(p_Val2_7_reg_1136),
    .ap_return(grp_sqrt_fixed_28_15_s_fu_251_ap_return),
    .ap_ce(grp_sqrt_fixed_28_15_s_fu_251_ap_ce)
);

sqrt_fixed_28_15_s grp_sqrt_fixed_28_15_s_fu_256(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(p_Val2_8_reg_1141),
    .ap_return(grp_sqrt_fixed_28_15_s_fu_256_ap_return),
    .ap_ce(grp_sqrt_fixed_28_15_s_fu_256_ap_ce)
);

sqrt_fixed_28_15_s grp_sqrt_fixed_28_15_s_fu_261(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(p_Val2_10_reg_1146),
    .ap_return(grp_sqrt_fixed_28_15_s_fu_261_ap_return),
    .ap_ce(grp_sqrt_fixed_28_15_s_fu_261_ap_ce)
);

log_28_15_s grp_log_28_15_s_fu_266(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_log_28_15_s_fu_266_ap_start),
    .ap_done(grp_log_28_15_s_fu_266_ap_done),
    .ap_idle(grp_log_28_15_s_fu_266_ap_idle),
    .ap_ready(grp_log_28_15_s_fu_266_ap_ready),
    .x_V(grp_log_28_15_s_fu_266_x_V),
    .ap_return(grp_log_28_15_s_fu_266_ap_return)
);

mabonsoc_mux_42_1fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 14 ))
mabonsoc_mux_42_1fYi_U8(
    .din0(X_V_0),
    .din1(X_V_1),
    .din2(X_V_2),
    .din3(X_V_3),
    .din4(Index_V),
    .dout(tmp_1_fu_347_p6)
);

mabonsoc_sdiv_32ng8j #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mabonsoc_sdiv_32ng8j_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_484_p0),
    .din1(grp_fu_484_p1),
    .ce(1'b1),
    .dout(grp_fu_484_p2)
);

mabonsoc_sdiv_32ng8j #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mabonsoc_sdiv_32ng8j_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_501_p0),
    .din1(grp_fu_501_p1),
    .ce(1'b1),
    .dout(grp_fu_501_p2)
);

mabonsoc_sdiv_32ng8j #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mabonsoc_sdiv_32ng8j_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_518_p0),
    .din1(grp_fu_518_p1),
    .ce(1'b1),
    .dout(grp_fu_518_p2)
);

mabonsoc_sdiv_32ng8j #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mabonsoc_sdiv_32ng8j_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_535_p0),
    .din1(grp_fu_535_p1),
    .ce(1'b1),
    .dout(grp_fu_535_p2)
);

mabonsoc_udiv_18nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 18 ))
mabonsoc_udiv_18nhbi_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(m_V_fu_545_p3),
    .din1(grp_fu_555_p1),
    .ce(1'b1),
    .dout(grp_fu_555_p2)
);

mabonsoc_udiv_18nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 18 ))
mabonsoc_udiv_18nhbi_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(m_V_fu_545_p3),
    .din1(grp_fu_564_p1),
    .ce(1'b1),
    .dout(grp_fu_564_p2)
);

mabonsoc_udiv_18nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 18 ))
mabonsoc_udiv_18nhbi_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(m_V_fu_545_p3),
    .din1(grp_fu_573_p1),
    .ce(1'b1),
    .dout(grp_fu_573_p2)
);

mabonsoc_udiv_18nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 18 ))
mabonsoc_udiv_18nhbi_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(m_V_fu_545_p3),
    .din1(grp_fu_582_p1),
    .ce(1'b1),
    .dout(grp_fu_582_p2)
);

mabonsoc_mux_42_1ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 15 ),
    .din3_WIDTH( 15 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 15 ))
mabonsoc_mux_42_1ibs_U17(
    .din0(UCB_0_V_fu_644_p2),
    .din1(UCB_1_V_fu_648_p2),
    .din2(UCB_2_V_fu_652_p2),
    .din3(tmp_fu_670_p4),
    .din4(tmp_fu_670_p5),
    .dout(tmp_fu_670_p6)
);

mabonsoc_mux_42_1ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 15 ),
    .din3_WIDTH( 15 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 15 ))
mabonsoc_mux_42_1ibs_U18(
    .din0(UCB_0_V_reg_1191),
    .din1(UCB_1_V_reg_1196),
    .din2(UCB_2_V_reg_1201),
    .din3(UCB_3_V_reg_1206),
    .din4(select_ln35_fu_690_p3),
    .dout(tmp_2_fu_696_p6)
);

mabonsoc_mux_42_1fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 14 ))
mabonsoc_mux_42_1fYi_U19(
    .din0(T_V_0_load_reg_1027),
    .din1(T_V_1_load_reg_1034),
    .din2(T_V_2_load_reg_1042),
    .din3(T_V_3_load_reg_1050),
    .din4(select_ln35_1_reg_1222),
    .dout(tmp_3_fu_824_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage39_subdone) & (1'b1 == ap_CS_fsm_pp0_stage39))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_log_28_15_s_fu_266_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln887_fu_291_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_log_28_15_s_fu_266_ap_start_reg <= 1'b1;
        end else if ((grp_log_28_15_s_fu_266_ap_ready == 1'b1)) begin
            grp_log_28_15_s_fu_266_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_Index_V_new_3_reg_117 <= trunc_ln321_reg_983_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_Index_V_new_3_reg_117 <= ap_phi_reg_pp0_iter0_Index_V_new_3_reg_117;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_T_V_0_flag_2_reg_162 <= icmp_ln321_fu_719_p2;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_T_V_0_flag_2_reg_162 <= ap_phi_reg_pp0_iter0_T_V_0_flag_2_reg_162;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_T_V_0_new_2_reg_172 <= 14'd1;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_T_V_0_new_2_reg_172 <= ap_phi_reg_pp0_iter0_T_V_0_new_2_reg_172;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_T_V_1_flag_2_reg_183 <= icmp_ln321_1_fu_724_p2;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_T_V_1_flag_2_reg_183 <= ap_phi_reg_pp0_iter0_T_V_1_flag_2_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_T_V_1_new_2_reg_193 <= 14'd1;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_T_V_1_new_2_reg_193 <= ap_phi_reg_pp0_iter0_T_V_1_new_2_reg_193;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_T_V_2_flag_2_reg_204 <= icmp_ln321_2_fu_729_p2;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_T_V_2_flag_2_reg_204 <= ap_phi_reg_pp0_iter0_T_V_2_flag_2_reg_204;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_T_V_2_new_2_reg_214 <= 14'd1;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_T_V_2_new_2_reg_214 <= ap_phi_reg_pp0_iter0_T_V_2_new_2_reg_214;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_T_V_3_flag_2_reg_225 <= and_ln321_1_fu_755_p2;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_T_V_3_flag_2_reg_225 <= ap_phi_reg_pp0_iter0_T_V_3_flag_2_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_T_V_3_new_2_reg_235 <= 14'd1;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_T_V_3_new_2_reg_235 <= ap_phi_reg_pp0_iter0_T_V_3_new_2_reg_235;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_X_V_0_new_2_reg_126 <= select_ln321_fu_761_p3;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_X_V_0_new_2_reg_126 <= ap_phi_reg_pp0_iter0_X_V_0_new_2_reg_126;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_X_V_1_new_2_reg_135 <= select_ln321_2_fu_775_p3;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_X_V_1_new_2_reg_135 <= ap_phi_reg_pp0_iter0_X_V_1_new_2_reg_135;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_X_V_2_new_2_reg_144 <= select_ln321_5_fu_796_p3;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_X_V_2_new_2_reg_144 <= ap_phi_reg_pp0_iter0_X_V_2_new_2_reg_144;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter1_X_V_3_new_2_reg_153 <= select_ln321_8_fu_817_p3;
    end else if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_X_V_3_new_2_reg_153 <= ap_phi_reg_pp0_iter0_X_V_3_new_2_reg_153;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Index_V <= ap_phi_mux_Index_V_new_3_phi_fu_120_p4;
        X_V_0 <= ap_phi_mux_X_V_0_new_2_phi_fu_129_p4;
        X_V_1 <= ap_phi_mux_X_V_1_new_2_phi_fu_138_p4;
        X_V_2 <= ap_phi_mux_X_V_2_new_2_phi_fu_147_p4;
        X_V_3 <= ap_phi_mux_X_V_3_new_2_phi_fu_156_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_phi_mux_T_V_0_flag_2_phi_fu_165_p4 == 1'd1))) begin
        T_V_0 <= ap_phi_mux_T_V_0_new_2_phi_fu_176_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        T_V_0_load_reg_1027 <= T_V_0;
        T_V_1_load_reg_1034 <= T_V_1;
        T_V_2_load_reg_1042 <= T_V_2;
        T_V_3_load_reg_1050 <= T_V_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_phi_mux_T_V_1_flag_2_phi_fu_186_p4 == 1'd1))) begin
        T_V_1 <= ap_phi_mux_T_V_1_new_2_phi_fu_197_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_phi_mux_T_V_2_flag_2_phi_fu_207_p4 == 1'd1))) begin
        T_V_2 <= ap_phi_mux_T_V_2_new_2_phi_fu_218_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_phi_mux_T_V_3_flag_2_phi_fu_228_p4 == 1'd1))) begin
        T_V_3 <= ap_phi_mux_T_V_3_new_2_phi_fu_239_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        UCB_0_V_reg_1191 <= UCB_0_V_fu_644_p2;
        UCB_1_V_reg_1196 <= UCB_1_V_fu_648_p2;
        UCB_2_V_reg_1201 <= UCB_2_V_fu_652_p2;
        UCB_3_V_reg_1206 <= UCB_3_V_fu_656_p2;
        icmp_ln1495_1_reg_1217 <= icmp_ln1495_1_fu_684_p2;
        zext_ln1495_reg_1212[0] <= zext_ln1495_fu_666_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln887_reg_979 <= icmp_ln887_fu_291_p2;
        icmp_ln887_reg_979_pp0_iter1_reg <= icmp_ln887_reg_979;
        tmp_V_reg_972 <= t_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29) & (icmp_ln887_reg_979 == 1'd0))) begin
        p_Val2_10_reg_1146 <= grp_fu_582_p2;
        p_Val2_6_reg_1131 <= grp_fu_555_p2;
        p_Val2_7_reg_1136 <= grp_fu_564_p2;
        p_Val2_8_reg_1141 <= grp_fu_573_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        select_ln35_1_reg_1222 <= select_ln35_1_fu_711_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        select_ln700_2_reg_1001 <= select_ln700_2_fu_395_p3;
        select_ln700_5_reg_1009 <= select_ln700_5_fu_425_p3;
        select_ln700_8_reg_1018 <= select_ln700_8_fu_449_p3;
        select_ln700_reg_994 <= select_ln700_fu_373_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        t_V <= add_ln700_2_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln887_reg_979 == 1'd1))) begin
        trunc_ln321_reg_983 <= trunc_ln321_fu_305_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln321_reg_983_pp0_iter1_reg <= trunc_ln321_reg_983;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        trunc_ln3_reg_1156 <= {{grp_fu_484_p2[19:5]}};
        trunc_ln703_1_reg_1151 <= trunc_ln703_1_fu_588_p1;
        trunc_ln703_2_reg_1161 <= trunc_ln703_2_fu_602_p1;
        trunc_ln703_3_reg_1171 <= trunc_ln703_3_fu_616_p1;
        trunc_ln703_4_reg_1181 <= trunc_ln703_4_fu_630_p1;
        trunc_ln708_21_reg_1176 <= {{grp_fu_518_p2[19:5]}};
        trunc_ln708_22_reg_1186 <= {{grp_fu_535_p2[19:5]}};
        trunc_ln708_s_reg_1166 <= {{grp_fu_501_p2[19:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln887_reg_979 == 1'd0))) begin
        trunc_ln703_reg_1098 <= trunc_ln703_fu_541_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Out_r_ap_vld = 1'b1;
    end else begin
        Out_r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_Index_V_new_3_phi_fu_120_p4 = select_ln35_1_reg_1222;
    end else begin
        ap_phi_mux_Index_V_new_3_phi_fu_120_p4 = ap_phi_reg_pp0_iter1_Index_V_new_3_reg_117;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_T_V_0_flag_2_phi_fu_165_p4 = 1'd1;
    end else begin
        ap_phi_mux_T_V_0_flag_2_phi_fu_165_p4 = ap_phi_reg_pp0_iter1_T_V_0_flag_2_reg_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_T_V_0_new_2_phi_fu_176_p4 = select_ln700_9_fu_844_p3;
    end else begin
        ap_phi_mux_T_V_0_new_2_phi_fu_176_p4 = ap_phi_reg_pp0_iter1_T_V_0_new_2_reg_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_T_V_1_flag_2_phi_fu_186_p4 = 1'd1;
    end else begin
        ap_phi_mux_T_V_1_flag_2_phi_fu_186_p4 = ap_phi_reg_pp0_iter1_T_V_1_flag_2_reg_183;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_T_V_1_new_2_phi_fu_197_p4 = select_ln700_11_fu_864_p3;
    end else begin
        ap_phi_mux_T_V_1_new_2_phi_fu_197_p4 = ap_phi_reg_pp0_iter1_T_V_1_new_2_reg_193;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_T_V_2_flag_2_phi_fu_207_p4 = 1'd1;
    end else begin
        ap_phi_mux_T_V_2_flag_2_phi_fu_207_p4 = ap_phi_reg_pp0_iter1_T_V_2_flag_2_reg_204;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_T_V_2_new_2_phi_fu_218_p4 = select_ln700_13_fu_890_p3;
    end else begin
        ap_phi_mux_T_V_2_new_2_phi_fu_218_p4 = ap_phi_reg_pp0_iter1_T_V_2_new_2_reg_214;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_T_V_3_flag_2_phi_fu_228_p4 = 1'd1;
    end else begin
        ap_phi_mux_T_V_3_flag_2_phi_fu_228_p4 = ap_phi_reg_pp0_iter1_T_V_3_flag_2_reg_225;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_T_V_3_new_2_phi_fu_239_p4 = select_ln700_15_fu_905_p3;
    end else begin
        ap_phi_mux_T_V_3_new_2_phi_fu_239_p4 = ap_phi_reg_pp0_iter1_T_V_3_new_2_reg_235;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_X_V_0_new_2_phi_fu_129_p4 = select_ln700_reg_994;
    end else begin
        ap_phi_mux_X_V_0_new_2_phi_fu_129_p4 = ap_phi_reg_pp0_iter1_X_V_0_new_2_reg_126;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_X_V_1_new_2_phi_fu_138_p4 = select_ln700_2_reg_1001;
    end else begin
        ap_phi_mux_X_V_1_new_2_phi_fu_138_p4 = ap_phi_reg_pp0_iter1_X_V_1_new_2_reg_135;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_X_V_2_new_2_phi_fu_147_p4 = select_ln700_5_reg_1009;
    end else begin
        ap_phi_mux_X_V_2_new_2_phi_fu_147_p4 = ap_phi_reg_pp0_iter1_X_V_2_new_2_reg_144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln887_reg_979_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_X_V_3_new_2_phi_fu_156_p4 = select_ln700_8_reg_1018;
    end else begin
        ap_phi_mux_X_V_3_new_2_phi_fu_156_p4 = ap_phi_reg_pp0_iter1_X_V_3_new_2_reg_153;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage39_11001_ignoreCallOp357) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp365) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage38_11001_ignoreCallOp349) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage37_11001_ignoreCallOp341) & (1'b1 == ap_CS_fsm_pp0_stage37)) | ((1'b0 == ap_block_pp0_stage36_11001_ignoreCallOp333) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((1'b0 == ap_block_pp0_stage35_11001_ignoreCallOp325) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((1'b0 == ap_block_pp0_stage34_11001_ignoreCallOp317) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage33_11001_ignoreCallOp309) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage32_11001_ignoreCallOp301) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage31_11001_ignoreCallOp293) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage30_11001_ignoreCallOp285) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp373) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_sqrt_fixed_28_15_s_fu_246_ap_ce = 1'b1;
    end else begin
        grp_sqrt_fixed_28_15_s_fu_246_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage39_11001_ignoreCallOp359) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp367) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage38_11001_ignoreCallOp351) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage37_11001_ignoreCallOp343) & (1'b1 == ap_CS_fsm_pp0_stage37)) | ((1'b0 == ap_block_pp0_stage36_11001_ignoreCallOp335) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((1'b0 == ap_block_pp0_stage35_11001_ignoreCallOp327) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((1'b0 == ap_block_pp0_stage34_11001_ignoreCallOp319) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage33_11001_ignoreCallOp311) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage32_11001_ignoreCallOp303) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage31_11001_ignoreCallOp295) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage30_11001_ignoreCallOp287) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp377) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_sqrt_fixed_28_15_s_fu_251_ap_ce = 1'b1;
    end else begin
        grp_sqrt_fixed_28_15_s_fu_251_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage39_11001_ignoreCallOp361) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp369) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage38_11001_ignoreCallOp353) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage37_11001_ignoreCallOp345) & (1'b1 == ap_CS_fsm_pp0_stage37)) | ((1'b0 == ap_block_pp0_stage36_11001_ignoreCallOp337) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((1'b0 == ap_block_pp0_stage35_11001_ignoreCallOp329) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((1'b0 == ap_block_pp0_stage34_11001_ignoreCallOp321) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage33_11001_ignoreCallOp313) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage32_11001_ignoreCallOp305) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage31_11001_ignoreCallOp297) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage30_11001_ignoreCallOp289) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp381) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_sqrt_fixed_28_15_s_fu_256_ap_ce = 1'b1;
    end else begin
        grp_sqrt_fixed_28_15_s_fu_256_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage39_11001_ignoreCallOp363) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp371) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage38_11001_ignoreCallOp355) & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage37_11001_ignoreCallOp347) & (1'b1 == ap_CS_fsm_pp0_stage37)) | ((1'b0 == ap_block_pp0_stage36_11001_ignoreCallOp339) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((1'b0 == ap_block_pp0_stage35_11001_ignoreCallOp331) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((1'b0 == ap_block_pp0_stage34_11001_ignoreCallOp323) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage33_11001_ignoreCallOp315) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage32_11001_ignoreCallOp307) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage31_11001_ignoreCallOp299) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage30_11001_ignoreCallOp291) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp385) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_sqrt_fixed_28_15_s_fu_261_ap_ce = 1'b1;
    end else begin
        grp_sqrt_fixed_28_15_s_fu_261_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Out_r = ap_phi_mux_Index_V_new_3_phi_fu_120_p4;

assign UCB_0_V_fu_644_p2 = (trunc_ln3_reg_1156 + trunc_ln703_1_reg_1151);

assign UCB_1_V_fu_648_p2 = (trunc_ln708_s_reg_1166 + trunc_ln703_2_reg_1161);

assign UCB_2_V_fu_652_p2 = (trunc_ln708_21_reg_1176 + trunc_ln703_3_reg_1171);

assign UCB_3_V_fu_656_p2 = (trunc_ln708_22_reg_1186 + trunc_ln703_4_reg_1181);

assign add_ln700_1_fu_833_p2 = (14'd1 + tmp_3_fu_824_p6);

assign add_ln700_2_fu_308_p2 = (tmp_V_reg_972 + 14'd1);

assign add_ln700_fu_361_p2 = (tmp_1_fu_347_p6 + zext_ln700_fu_327_p1);

assign and_ln321_1_fu_755_p2 = (icmp_ln321_3_fu_734_p2 & and_ln321_fu_749_p2);

assign and_ln321_fu_749_p2 = (icmp_ln321_5_fu_744_p2 & icmp_ln321_4_fu_739_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp365 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp367 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp369 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp371 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp373 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp377 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp381 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp385 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001_ignoreCallOp285 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001_ignoreCallOp287 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001_ignoreCallOp289 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001_ignoreCallOp291 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001_ignoreCallOp293 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001_ignoreCallOp295 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001_ignoreCallOp297 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001_ignoreCallOp299 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001_ignoreCallOp301 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001_ignoreCallOp303 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001_ignoreCallOp305 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001_ignoreCallOp307 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001_ignoreCallOp309 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001_ignoreCallOp311 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001_ignoreCallOp313 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001_ignoreCallOp315 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001_ignoreCallOp317 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001_ignoreCallOp319 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001_ignoreCallOp321 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001_ignoreCallOp323 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001_ignoreCallOp325 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001_ignoreCallOp327 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001_ignoreCallOp329 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001_ignoreCallOp331 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001_ignoreCallOp333 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001_ignoreCallOp335 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001_ignoreCallOp337 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001_ignoreCallOp339 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001_ignoreCallOp341 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001_ignoreCallOp343 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001_ignoreCallOp345 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001_ignoreCallOp347 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001_ignoreCallOp349 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001_ignoreCallOp351 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001_ignoreCallOp353 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001_ignoreCallOp355 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001_ignoreCallOp357 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001_ignoreCallOp359 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001_ignoreCallOp361 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001_ignoreCallOp363 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call15 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call24 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call33 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call6 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter1_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter1_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter1_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter1_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter1_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter1_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_Index_V_new_3_reg_117 = 'bx;

assign ap_phi_reg_pp0_iter0_T_V_0_flag_2_reg_162 = 'bx;

assign ap_phi_reg_pp0_iter0_T_V_0_new_2_reg_172 = 'bx;

assign ap_phi_reg_pp0_iter0_T_V_1_flag_2_reg_183 = 'bx;

assign ap_phi_reg_pp0_iter0_T_V_1_new_2_reg_193 = 'bx;

assign ap_phi_reg_pp0_iter0_T_V_2_flag_2_reg_204 = 'bx;

assign ap_phi_reg_pp0_iter0_T_V_2_new_2_reg_214 = 'bx;

assign ap_phi_reg_pp0_iter0_T_V_3_flag_2_reg_225 = 'bx;

assign ap_phi_reg_pp0_iter0_T_V_3_new_2_reg_235 = 'bx;

assign ap_phi_reg_pp0_iter0_X_V_0_new_2_reg_126 = 'bx;

assign ap_phi_reg_pp0_iter0_X_V_1_new_2_reg_135 = 'bx;

assign ap_phi_reg_pp0_iter0_X_V_2_new_2_reg_144 = 'bx;

assign ap_phi_reg_pp0_iter0_X_V_3_new_2_reg_153 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_484_p0 = {{select_ln700_reg_994}, {18'd0}};

assign grp_fu_484_p1 = grp_fu_484_p10;

assign grp_fu_484_p10 = T_V_0;

assign grp_fu_501_p0 = {{select_ln700_2_reg_1001}, {18'd0}};

assign grp_fu_501_p1 = grp_fu_501_p10;

assign grp_fu_501_p10 = T_V_1;

assign grp_fu_518_p0 = {{select_ln700_5_reg_1009}, {18'd0}};

assign grp_fu_518_p1 = grp_fu_518_p10;

assign grp_fu_518_p10 = T_V_2;

assign grp_fu_535_p0 = {{select_ln700_8_reg_1018}, {18'd0}};

assign grp_fu_535_p1 = grp_fu_535_p10;

assign grp_fu_535_p10 = T_V_3;

assign grp_fu_555_p1 = grp_fu_555_p10;

assign grp_fu_555_p10 = T_V_0_load_reg_1027;

assign grp_fu_564_p1 = grp_fu_564_p10;

assign grp_fu_564_p10 = T_V_1_load_reg_1034;

assign grp_fu_573_p1 = grp_fu_573_p10;

assign grp_fu_573_p10 = T_V_2_load_reg_1042;

assign grp_fu_582_p1 = grp_fu_582_p10;

assign grp_fu_582_p10 = T_V_3_load_reg_1050;

assign grp_log_28_15_s_fu_266_ap_start = grp_log_28_15_s_fu_266_ap_start_reg;

assign grp_log_28_15_s_fu_266_x_V = {{tmp_V_reg_972}, {13'd0}};

assign icmp_ln1495_1_fu_684_p2 = ((tmp_fu_670_p6 < UCB_2_V_fu_652_p2) ? 1'b1 : 1'b0);

assign icmp_ln1495_2_fu_706_p2 = ((tmp_2_fu_696_p6 < UCB_3_V_reg_1206) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_660_p2 = ((UCB_0_V_fu_644_p2 < UCB_1_V_fu_648_p2) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_724_p2 = ((trunc_ln321_reg_983_pp0_iter1_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_729_p2 = ((trunc_ln321_reg_983_pp0_iter1_reg == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_3_fu_734_p2 = ((trunc_ln321_reg_983_pp0_iter1_reg != 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_4_fu_739_p2 = ((trunc_ln321_reg_983_pp0_iter1_reg != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_5_fu_744_p2 = ((trunc_ln321_reg_983_pp0_iter1_reg != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_719_p2 = ((trunc_ln321_reg_983_pp0_iter1_reg == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln700_1_fu_381_p2 = ((Index_V == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln700_2_fu_403_p2 = ((Index_V == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln700_3_fu_839_p2 = ((select_ln35_1_reg_1222 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln700_4_fu_852_p2 = ((select_ln35_1_reg_1222 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln700_5_fu_872_p2 = ((select_ln35_1_reg_1222 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln700_fu_367_p2 = ((Index_V == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_291_p2 = ((tmp_42_fu_281_p4 == 12'd0) ? 1'b1 : 1'b0);

assign m_V_fu_545_p3 = {{trunc_ln703_reg_1098}, {1'd0}};

assign or_ln700_fu_877_p2 = (icmp_ln700_4_fu_852_p2 | icmp_ln700_3_fu_839_p2);

assign select_ln321_1_fu_768_p3 = ((icmp_ln321_1_fu_724_p2[0:0] === 1'b1) ? 14'd0 : select_ln700_2_reg_1001);

assign select_ln321_2_fu_775_p3 = ((icmp_ln321_fu_719_p2[0:0] === 1'b1) ? select_ln700_2_reg_1001 : select_ln321_1_fu_768_p3);

assign select_ln321_3_fu_782_p3 = ((icmp_ln321_2_fu_729_p2[0:0] === 1'b1) ? 14'd0 : select_ln700_5_reg_1009);

assign select_ln321_4_fu_789_p3 = ((icmp_ln321_1_fu_724_p2[0:0] === 1'b1) ? select_ln700_5_reg_1009 : select_ln321_3_fu_782_p3);

assign select_ln321_5_fu_796_p3 = ((icmp_ln321_fu_719_p2[0:0] === 1'b1) ? select_ln700_5_reg_1009 : select_ln321_4_fu_789_p3);

assign select_ln321_6_fu_803_p3 = ((icmp_ln321_2_fu_729_p2[0:0] === 1'b1) ? select_ln700_8_reg_1018 : 14'd0);

assign select_ln321_7_fu_810_p3 = ((icmp_ln321_1_fu_724_p2[0:0] === 1'b1) ? select_ln700_8_reg_1018 : select_ln321_6_fu_803_p3);

assign select_ln321_8_fu_817_p3 = ((icmp_ln321_fu_719_p2[0:0] === 1'b1) ? select_ln700_8_reg_1018 : select_ln321_7_fu_810_p3);

assign select_ln321_fu_761_p3 = ((icmp_ln321_fu_719_p2[0:0] === 1'b1) ? 14'd0 : select_ln700_reg_994);

assign select_ln35_1_fu_711_p3 = ((icmp_ln1495_2_fu_706_p2[0:0] === 1'b1) ? 2'd3 : select_ln35_fu_690_p3);

assign select_ln35_fu_690_p3 = ((icmp_ln1495_1_reg_1217[0:0] === 1'b1) ? 2'd2 : zext_ln1495_reg_1212);

assign select_ln700_10_fu_857_p3 = ((icmp_ln700_4_fu_852_p2[0:0] === 1'b1) ? add_ln700_1_fu_833_p2 : T_V_1_load_reg_1034);

assign select_ln700_11_fu_864_p3 = ((icmp_ln700_3_fu_839_p2[0:0] === 1'b1) ? T_V_1_load_reg_1034 : select_ln700_10_fu_857_p3);

assign select_ln700_12_fu_883_p3 = ((icmp_ln700_5_fu_872_p2[0:0] === 1'b1) ? add_ln700_1_fu_833_p2 : T_V_2_load_reg_1042);

assign select_ln700_13_fu_890_p3 = ((or_ln700_fu_877_p2[0:0] === 1'b1) ? T_V_2_load_reg_1042 : select_ln700_12_fu_883_p3);

assign select_ln700_14_fu_898_p3 = ((icmp_ln700_5_fu_872_p2[0:0] === 1'b1) ? T_V_3_load_reg_1050 : add_ln700_1_fu_833_p2);

assign select_ln700_15_fu_905_p3 = ((or_ln700_fu_877_p2[0:0] === 1'b1) ? T_V_3_load_reg_1050 : select_ln700_14_fu_898_p3);

assign select_ln700_1_fu_387_p3 = ((icmp_ln700_1_fu_381_p2[0:0] === 1'b1) ? add_ln700_fu_361_p2 : X_V_1);

assign select_ln700_2_fu_395_p3 = ((icmp_ln700_fu_367_p2[0:0] === 1'b1) ? X_V_1 : select_ln700_1_fu_387_p3);

assign select_ln700_3_fu_409_p3 = ((icmp_ln700_2_fu_403_p2[0:0] === 1'b1) ? add_ln700_fu_361_p2 : X_V_2);

assign select_ln700_4_fu_417_p3 = ((icmp_ln700_1_fu_381_p2[0:0] === 1'b1) ? X_V_2 : select_ln700_3_fu_409_p3);

assign select_ln700_5_fu_425_p3 = ((icmp_ln700_fu_367_p2[0:0] === 1'b1) ? X_V_2 : select_ln700_4_fu_417_p3);

assign select_ln700_6_fu_433_p3 = ((icmp_ln700_2_fu_403_p2[0:0] === 1'b1) ? X_V_3 : add_ln700_fu_361_p2);

assign select_ln700_7_fu_441_p3 = ((icmp_ln700_1_fu_381_p2[0:0] === 1'b1) ? X_V_3 : select_ln700_6_fu_433_p3);

assign select_ln700_8_fu_449_p3 = ((icmp_ln700_fu_367_p2[0:0] === 1'b1) ? X_V_3 : select_ln700_7_fu_441_p3);

assign select_ln700_9_fu_844_p3 = ((icmp_ln700_3_fu_839_p2[0:0] === 1'b1) ? add_ln700_1_fu_833_p2 : T_V_0_load_reg_1027);

assign select_ln700_fu_373_p3 = ((icmp_ln700_fu_367_p2[0:0] === 1'b1) ? add_ln700_fu_361_p2 : X_V_0);

assign tmp_42_fu_281_p4 = {{t_V[13:2]}};

assign tmp_fu_670_p4 = (trunc_ln708_22_reg_1186 + trunc_ln703_4_reg_1181);

assign tmp_fu_670_p5 = icmp_ln1495_fu_660_p2;

assign trunc_ln301_fu_323_p1 = reward[0:0];

assign trunc_ln321_fu_305_p1 = tmp_V_reg_972[1:0];

assign trunc_ln703_1_fu_588_p1 = grp_sqrt_fixed_28_15_s_fu_246_ap_return[14:0];

assign trunc_ln703_2_fu_602_p1 = grp_sqrt_fixed_28_15_s_fu_251_ap_return[14:0];

assign trunc_ln703_3_fu_616_p1 = grp_sqrt_fixed_28_15_s_fu_256_ap_return[14:0];

assign trunc_ln703_4_fu_630_p1 = grp_sqrt_fixed_28_15_s_fu_261_ap_return[14:0];

assign trunc_ln703_fu_541_p1 = grp_log_28_15_s_fu_266_ap_return[16:0];

assign zext_ln1495_fu_666_p1 = icmp_ln1495_fu_660_p2;

assign zext_ln700_fu_327_p1 = trunc_ln301_fu_323_p1;

always @ (posedge ap_clk) begin
    zext_ln1495_reg_1212[1] <= 1'b0;
end

endmodule //mabonsoc
